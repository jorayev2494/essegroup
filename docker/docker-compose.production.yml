version: '3.9'

x-php-cli: &php-cli
    build:
        context: ./php_cli
        dockerfile: Dockerfile
        target: ${PHP_CLI_BUILD_TARGET:-${BUILD_TARGET?Build mode php-cli}}
    working_dir: /var/project
    volumes:
        - ../:/var/project

services:
    # Nginx Service
    nginx-proxy:
        build:
            context: ./nginx_proxy
            dockerfile: Dockerfile
            target: ${NGINX_PROXY_BUILD_TARGET:-${BUILD_TARGET?Build mode php-fpm}}
        container_name: ${COMPOSE_PROJECT_NAME?Not project name}-nginx-proxy
        restart: unless-stopped
        tty: true
        volumes:
            - ../:/var/project
            - ./nginx_proxy/certs:/etc/nginx/certs:ro
        ports:
            - ${NGINX_PROXY_PORT?Not nginx proxy port}:80
            - "443:443"
        networks:
            - essegroup

    # Nginx Service
    nginx:
        build:
            context: ./nginx
            dockerfile: Dockerfile
            target: ${NGINX_BUILD_TARGET:-${BUILD_TARGET?Build mode php-fpm}}
        container_name: ${COMPOSE_PROJECT_NAME?Not project name}-nginx
        restart: unless-stopped
        tty: true
        volumes:
            - ../:/var/project
        ports:
            - ${NGINX_PORT?Not nginx port}:80
        networks:
            - essegroup

    # PHP Service
    php-fpm:
        build:
            context: ./php
            dockerfile: Dockerfile
            target: ${PHP_FPM_BUILD_TARGET:-${BUILD_TARGET?Build mode php-fpm}}
        container_name: ${COMPOSE_PROJECT_NAME?Not project name}-php-fpm
        restart: unless-stopped
        tty: true
        volumes:
            - ../:/var/project
        networks:
            - essegroup

    # PHP CLI Service
    php-cli:
        <<: *php-cli
        container_name: ${COMPOSE_PROJECT_NAME?Not project name}-php-cli
        restart: no
        networks:
            - essegroup

    # Redis Service
    redis:
        image: redis:alpine
        container_name: ${COMPOSE_PROJECT_NAME?Not project name}-redis
        restart: unless-stopped
        ports:
            - ${REDIS_PORT?Not redis port}:6379
        volumes:
            - ./redis/data:/data
        healthcheck:
            test: [ 'CMD', 'redis-cli', 'ping' ]
            retries: 3
            timeout: 5s
        networks:
            - essegroup

    # Redis Minio
    # https://github.com/amincheloh/cookbook/blob/master/docs/how-to-use-minio-as-laravel-file-storage.md
    minio:
        hostname: minio
        image: minio/minio:RELEASE.2024-01-18T22-51-28Z-cpuv1
        command: server /data --console-address :${MINIO_WEB_INTERFACE_PORT}
        container_name: ${COMPOSE_PROJECT_NAME?Not project name}-minio
        env_file:
            - ./minio/.env
        healthcheck:
            test: [ 'CMD', 'curl', '-f', 'http://localhost:${MINIO_PORT}/minio/health/live' ]
            interval: 30s
            timeout: 20s
            retries: 3
        volumes:
            - ./minio/data:/data
        ports:
            - ${MINIO_PORT}:9000
            - ${MINIO_WEB_INTERFACE_PORT}:9001
        networks:
            - essegroup

    # Redis Admin Front End
    admin-front-end:
        image: idocker2494/esseelitegroup-admin:latest
        container_name: ${COMPOSE_PROJECT_NAME?Not project name}-admin-front-end
        restart: unless-stopped
        # ports:
        #     - ${ADMIN_FRONT_END_PORT?Not Admin Front End port}:80
        networks:
            - essegroup

    # Redis Client Front End
    client-front-end:
        image: idocker2494/esseelitegroup-client:latest
        container_name: ${COMPOSE_PROJECT_NAME?Not project name}-client-front-end
        restart: unless-stopped
        # ports:
        #     - ${CLIENT_FRONT_END_PORT?Not Admin Front End port}:80
        networks:
            - essegroup

networks:
    essegroup:
        driver: bridge
